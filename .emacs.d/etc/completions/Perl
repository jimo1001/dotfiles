do
else
elseif
elsif
caller
continue
die
dump
eval
exit
for
foreach
goto
if
last
my
no
redo
return
sub
unless
until
use
while
undef
bless
delete
exists
ref
require
reset

;*1
__DATA__
__END__
__FILE__
__LINE__
__PACKAGE__
AUTOLOAD
BEGIN
CORE
DESTROY
END

EQ
GE
GT
LE
LT
NE
and
eq
ge
gt
lt
le
ne
not
or

;*2
abs
accept
alarm
atan2
bind
binmode
chdir
chmod
chomp
chop
chown
chr
chroot
close
closedir
cmp
connect
cos
crypt
dbmclose
dbmopen
defined
each
endgrent
endhostent
endnetent
endprotoent
endpwent
endservent
eof
exec
exp
fcntl
fileno
flock
fork
format
formline
get
glob
gmtime
grent
grep
grgid
grnam
hex
hostbyaddr
hostbyname
hostent
index
int
ioctl
join
keys
kill
lc
lcfirst
length
link
listen
local
localtime
log
login
lstat
map
mkdir
msgctl
msgget
msgrcv
msgsnd
netbyaddr
netbyname
netent
next
oct
open
opendir
ord
pack
package
peername
pgrp
pipe
pop
pos
ppid
print
printf
priority
protobyname
protobynumber
protoent
prototype
push
pwent
pwnam
pwuid
qq
quotemeta
qw
qx
rand
read
readdir
readline
readlink
readpipe
recv
rename
reverse
rewinddir
rindex
rmdir
scalar
seek
seekdir
select
semctl
semget
semop
send
servbyname
servbyport
servent
setgrent
sethostent
setnetent
setpgrp
setpriority
setprotoent
setpwent
setservent
setsockopt
shift
shmctl
shmget
shmread
shmwrite
shutdown
sin
sleep
socket
socketpair
sockname
sockopt
sort
splice
split
sprintf
sqrt
srand
stat
study
substr
symlink
syscall
sysopen
sysread
sysseek
system
syswrite
tell
telldir
tie
tied
time
times
tr
truncate
uc
ucfirst
umask
unlink
unpack
unshift
untie
utime
values
vec
wait
waitpid
wantarray
warn
write
xor
